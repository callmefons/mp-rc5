"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var router_1 = require("@angular/router");
var product_service_1 = require("../shared/api-service/product/product.service");
var forms_1 = require("@angular/forms");
var status_log_model_1 = require("../shared/models/status-log.model");
var platform_browser_1 = require('@angular/platform-browser');
/**
 * This class represents the lazy loaded HomeComponent.
 */
var AdminProductComponent = (function () {
    function AdminProductComponent(_fb, route, _router, _sanitizer, _productService) {
        this._fb = _fb;
        this.route = route;
        this._router = _router;
        this._sanitizer = _sanitizer;
        this._productService = _productService;
        this.loading = true;
        this.products = [];
        this.apps = [];
        this.apps_th = [];
        this.languagesTag = [];
        this.categoriesTag = [];
        this.departmentsTag = [];
        this.industriesTag = [];
        this.features = [];
        this.features_th = [];
        this.updated = true;
        this.reviewed = false;
        /*Set thumbnail and Screenshot*/
        this.screenshots = [];
        this.thumbnail = [];
        this.count = 0;
        this.max = 4;
        this.index = 0;
        this.selected = '';
        this.logs = [];
        this.video = false;
        this.thaiInput = false;
        this.myFormAdminReview = this._fb.group({
            id: [''],
            status: [''],
            comment: [''],
        });
    }
    AdminProductComponent.prototype.ngOnInit = function () {
        this.getProductId();
    };
    AdminProductComponent.prototype.onRefresh = function () {
        this.logs = [];
        this.languagesTag = [];
        this.departmentsTag = [];
        this.categoriesTag = [];
        this.industriesTag = [];
        this.features = [];
        this.features_th = [];
        this.screenshots = [];
        this.getProductId();
    };
    AdminProductComponent.prototype.ngOnDestroy = function () {
        if (this.sub_updateStatus) {
            this.sub_updateStatus.unsubscribe();
        }
        if (this.sub) {
            this.sub.unsubscribe();
        }
        if (this.sub_delete) {
            this.sub_delete.unsubscribe();
        }
    };
    AdminProductComponent.prototype.getProductId = function () {
        var _this = this;
        this.sub = this.route.params.subscribe(function (params) {
            _this.id = +params['id'];
            _this._productService.getProductId(_this.id)
                .subscribe(function (products) {
                _this.products = products.data['en'];
                _this.apps = products.data['en'];
                _this.apps_th = products.data['th'];
                _this.embedYoutube(_this.apps.youtube);
                for (var i = 0; i < _this.products.languages.length; i++) {
                    _this.languagesTag.push(_this.products.languages[i]);
                }
                for (var i = 0; i < _this.products.departments.length; i++) {
                    _this.departmentsTag.push(_this.products.departments[i]);
                }
                for (var i = 0; i < _this.products.categories.length; i++) {
                    _this.categoriesTag.push(_this.products.categories[i]);
                }
                for (var i = 0; i < _this.products.industries.length; i++) {
                    _this.industriesTag.push(_this.products.industries[i]);
                }
                for (var i = 0; i < _this.products.features.length; i++) {
                    _this.features.push(_this.products.features[i]);
                }
                for (var i = 0; i < _this.apps_th.features.length; i++) {
                    _this.features_th.push(_this.apps_th.features[i]);
                }
                for (var i = 0; i < _this.products.screenshots.length; i++) {
                    _this.screenshots.push(_this.products.screenshots[i]);
                }
                _this.setThumbnail();
                _this.selected = _this.screenshots[0].url;
                _this.loading = false;
            });
            //After get param Id
            _this.getLogProduct();
        });
    };
    //For Needs Review
    AdminProductComponent.prototype.onSubmit = function (value) {
        var _this = this;
        this.updated = false;
        this.reviewed = false;
        var statusLog = new status_log_model_1.StatusLog(this.myFormAdminReview.value.comment);
        this.updateStatus$ = this._productService.updateProductStatus(this.id, 'deny', statusLog);
        this.sub_updateStatus = this.updateStatus$.subscribe(function (res) {
            _this.updated = true;
            _this.reviewed = true;
            _this.onRefresh();
            _this.myFormAdminReview.reset();
        }, function (error) { return _this.errorMessage = error; });
    };
    AdminProductComponent.prototype.updateProductStatus = function (id, status) {
        var _this = this;
        this.updated = false;
        this.updateStatus$ = this._productService.updateProductStatus(id, status);
        this.sub_updateStatus = this.updateStatus$.subscribe(function () {
            _this.updated = true;
            _this.onRefresh();
        }, function (error) { return _this.errorMessage = error; });
    };
    /*Screenshot*/
    AdminProductComponent.prototype.onSelect = function (_screenshot, i, j) {
        this.selected = _screenshot;
        if (i != 0) {
            this.index = ((j + 1) + (4 * i) - 1);
        }
        else {
            this.index = j;
        }
    };
    AdminProductComponent.prototype.onControl = function (condition) {
        if (condition == 'plus') {
            if (this.index < this.screenshots.length - 1) {
                this.index++;
            }
            else {
                this.index = 0;
            }
        }
        else {
            if (this.index != 0) {
                this.index--;
            }
            else {
                this.index = this.screenshots.length - 1;
            }
        }
        this.selected = this.screenshots[this.index].url;
    };
    AdminProductComponent.prototype.setThumbnail = function () {
        for (var i = 0; i < Math.ceil((this.screenshots.length / 4)); i++) {
            this.thumbnail[i] = [];
            for (var j = 0; j < 4; j++) {
                if (this.count < this.screenshots.length) {
                    this.thumbnail[i][j] = this.screenshots[this.count].url;
                    this.count++;
                }
            }
        }
    };
    AdminProductComponent.prototype.embedYoutube = function (url) {
        if (url !== '') {
            this.video = true;
            var id = url.split('=', 2)[1];
            this.embedUrl = this._sanitizer.bypassSecurityTrustResourceUrl("https://www.youtube.com/embed/" + id);
        }
    };
    AdminProductComponent.prototype.goToListing = function () {
        this._router.navigate(["admin/listing"]);
    };
    AdminProductComponent.prototype.getLogProduct = function () {
        var _this = this;
        this.logs$ = this._productService.getLogProduct(this.id);
        this.sub_logs = this.logs$.subscribe(function (logs) {
            _this.logs = logs.data;
            _this.loading = false;
        }), function (err) { return _this.errorMessage = err; };
    };
    AdminProductComponent.prototype.deleteProduct = function (id) {
        var _this = this;
        this.deleteProduct$ = this._productService.deleteProduct(id);
        this.sub_delete = this.deleteProduct$.subscribe(function () {
            _this._router.navigate(["admin/listing"]);
        });
    };
    AdminProductComponent.prototype.onChangeLanguaeFrom = function (lang) {
        switch (lang) {
            case 'th':
                this.thaiInput = true;
                break;
            case 'en':
                this.thaiInput = false;
                break;
            default:
                this.thaiInput = false;
        }
    };
    AdminProductComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'sd-admin-product',
            templateUrl: 'templates/admin-product.component.html',
            styleUrls: ['styles/admin-product.component.css'],
        }), 
        __metadata('design:paramtypes', [forms_1.FormBuilder, router_1.ActivatedRoute, router_1.Router, platform_browser_1.DomSanitizationService, product_service_1.ProductService])
    ], AdminProductComponent);
    return AdminProductComponent;
}());
exports.AdminProductComponent = AdminProductComponent;

//# sourceMappingURL=data:application/json;base64,
