"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var router_1 = require('@angular/router');
var product_service_1 = require("../shared/api-service/product/product.service");
/**
 * This class represents the lazy loaded HomeComponent.
 */
var ProductListComponent = (function () {
    function ProductListComponent(route, _router, _productService) {
        this.route = route;
        this._router = _router;
        this._productService = _productService;
        this.loading = true;
        this.readonly = true;
        this.products = [];
        this.all_tag = [];
        this.languagesTag = [];
        this.departmentsTag = [];
        this.industriesTag = [];
        this.categoriesTag = [];
        this.checkedFirst = false;
        //Show Category Link
        this.enable = false;
        this.all_industry = false;
        this.all_category = false;
        this.all_language = false;
        this.all_department = false;
        this.tempAllTag = [];
        this.tempDepartment = [];
        this.tempIndustry = [];
        this.tempLanguage = [];
    }
    ProductListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route
            .params
            .subscribe(function (params) {
            _this.service_id = +params['id'];
            _this.getProductTags();
        });
    };
    ProductListComponent.prototype.ngOnDestroy = function () {
        if (this.sub) {
            this.sub.unsubscribe();
        }
    };
    ProductListComponent.prototype.getProductTags = function () {
        var _this = this;
        this._productService.getProductTags()
            .subscribe(function (product_tags) {
            _this.languagesTag = product_tags.languages;
            _this.departmentsTag = product_tags.departments;
            _this.categoriesTag = product_tags.categories;
            _this.industriesTag = product_tags.industries;
            if (_this.languagesTag != [] && _this.departmentsTag != [] && _this.categoriesTag != [] && _this.industriesTag != []) {
                (_a = _this.all_tag).push.apply(_a, _this.industriesTag.concat(_this.categoriesTag, _this.languagesTag, _this.departmentsTag));
            }
            //Service Id Plus 1 because service_id start index at 0 but alltag start 1
            for (var i = 0; i < _this.all_tag.length; i++) {
                if (_this.all_tag[i].id === _this.service_id) {
                    _this.status_id = _this.all_tag[i].dbid,
                        _this.status_type = _this.all_tag[i].type;
                    _this.title_category_name = _this.all_tag[i].name;
                }
            }
            _this.getAllProduct(_this.status_type, _this.status_id);
            var _a;
        }),
            function (error) { return _this.errorMessage = error; };
    };
    ProductListComponent.prototype.getAllProduct = function (type, tagId) {
        var _this = this;
        this.loading = true;
        this.all_product$ = this._productService.getProductByTypeAndTag(type, tagId);
        this.sub = this.all_product$.subscribe(function (product) {
            _this.products = product.data;
            _this.product_length = _this.products.length;
            _this.loading = false;
        });
    };
    //getProductByFilter
    ProductListComponent.prototype.getProductByFilter = function (value) {
        console.log(value);
        this.all_product$ = this._productService.getProductByFilter(value);
        this.sub_two = this.all_product$.subscribe(function (product) {
            //this.loading = false;
            console.log(product);
        });
        // this.loading = true;
    };
    ProductListComponent.prototype.onCheckAllIndustry = function (event) {
        this.tempIndustry = [];
        this.service_id = null;
        if (event.currentTarget.checked == true) {
            this.all_industry = true;
        }
        else {
            this.all_industry = false;
        }
        for (var i = 0; i < this.all_tag.length; i++) {
            if (this.all_tag[i].type === 'industry') {
                this.onCheckboxFilterTag(this.all_tag[i].dbid, this.all_tag[i].type, event);
            }
        }
    };
    ProductListComponent.prototype.onCheckAllCategory = function (event) {
        this.service_id = null;
        if (event.currentTarget.checked == true) {
            this.all_category = true;
        }
        else {
            this.all_category = false;
        }
        for (var i = 0; i < this.all_tag.length; i++) {
            if (this.all_tag[i].type === 'category') {
                this.onCheckboxFilterTag(this.all_tag[i].dbid, this.all_tag[i].type, event);
            }
        }
    };
    ProductListComponent.prototype.onCheckAllLanguage = function (event) {
        this.tempLanguage = [];
        this.service_id = null;
        if (event.currentTarget.checked == true) {
            this.all_language = true;
        }
        else {
            this.all_language = false;
        }
        for (var i = 0; i < this.all_tag.length; i++) {
            if (this.all_tag[i].type === 'language') {
                this.onCheckboxFilterTag(this.all_tag[i].dbid, this.all_tag[i].type, event);
            }
        }
    };
    ProductListComponent.prototype.onCheckAllDepartment = function (event) {
        this.service_id = null;
        this.tempDepartment = [];
        if (event.currentTarget.checked == true) {
            this.all_department = true;
        }
        else {
            this.all_department = false;
        }
        for (var i = 0; i < this.all_tag.length; i++) {
            if (this.all_tag[i].type === 'department') {
                this.onCheckboxFilterTag(this.all_tag[i].dbid, this.all_tag[i].type, event);
            }
        }
    };
    ProductListComponent.prototype.onCheckboxFilterTag = function (value, type, event) {
        this.tempAllTag = [];
        if (event.currentTarget.checked == true) {
            switch (type) {
                case 'department':
                    this.tempDepartment.push(value);
                    break;
                case 'industry':
                    this.tempIndustry.push(value);
                    break;
                case 'language':
                    this.tempLanguage.push(value);
                    break;
            }
            this.sendFilter();
        }
        if (event.currentTarget.checked == false) {
            switch (type) {
                case 'department':
                    var i = _.findIndex(this.tempDepartment, (value));
                    this.tempDepartment.splice(i, 1);
                    break;
                case 'industry':
                    var j = _.findIndex(this.tempIndustry, (value));
                    this.tempIndustry.splice(j, 1);
                    break;
                case 'language':
                    var k = _.findIndex(this.tempLanguage, (value));
                    this.tempLanguage.splice(k, 1);
                    break;
            }
            this.sendFilter();
        }
    };
    ProductListComponent.prototype.getStyle = function (categoryId) {
        return (this.service_id == categoryId) ? '#f5f5f5' : '#ffffff';
    };
    ProductListComponent.prototype.goToProductList = function (categoryId) {
        if (this.service_id != categoryId) {
            this._router.navigate([("/product/" + categoryId)]);
            //Reset all_tag when user click link navbar
            this.products = [];
            this.all_tag = [];
        }
    };
    ProductListComponent.prototype.goToProductDetail = function (productId) {
        this._router.navigate([("product/" + productId + "/detail")]);
    };
    ProductListComponent.prototype.sendFilter = function () {
        this.tempAllTag = [];
        var category = this.title_category_name;
        this.tempAllTag.push({
            'filter_by': 'category',
            'value': this.status_id
        }, {
            'type': 'department',
            'value': this.tempDepartment
        }, {
            'type': 'industry',
            'value': this.tempIndustry
        }, {
            'type': 'language',
            'value': this.tempLanguage
        });
        //console.log(this.tempAllTag);
        this.getProductByFilter(this.tempAllTag);
    };
    ProductListComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'sd-product',
            templateUrl: 'templates/product-list.component.html',
            styleUrls: ['styles/product-list.component.css']
        }), 
        __metadata('design:paramtypes', [router_1.ActivatedRoute, router_1.Router, product_service_1.ProductService])
    ], ProductListComponent);
    return ProductListComponent;
}());
exports.ProductListComponent = ProductListComponent;

//# sourceMappingURL=data:application/json;base64,
